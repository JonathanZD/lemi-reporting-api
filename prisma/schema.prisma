datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Wana {
  id          Int       @id @default(autoincrement())
  firstName   String?
  lastName    String?
  email       String?   @unique
  phone       String?   @unique
  userName    String?   @unique
  password    String?
  role        String?
  isActive    Boolean?  @default(true)

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model MeseretawiDirijet {
  id          Int       @id @default(autoincrement())
  firstName   String?
  lastName    String?
  email       String?   @unique
  phone       String?   @unique
  userName    String?   @unique
  password    String?
  role        String?
  isActive    Boolean?  @default(true)

  Report      Report[]
  listOfHiwas Hiwas[]
  Notifications Notification[] // Relation to notifications
  Schedules   Schedule[]       // Relation to Schedule

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Wereda {
  id          Int       @id @default(autoincrement())
  firstName   String?
  lastName    String?
  email       String?   @unique
  phone       String?   @unique
  userName    String?   @unique
  password    String?
  role        String?
  isActive    Boolean?  @default(true)

  ReportSent  Report[]
  Notifications Notification[] // Relation to notifications
  Schedules    Schedule[]       // Relation to Schedule

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Hiwas {
  id          Int       @id @default(autoincrement())
  firstName   String?
  lastName    String?
  email       String?   @unique
  phone       String?   @unique
  userName    String?   @unique
  password    String?
  role        String?
  isActive    Boolean?  @default(true)
  mdId        Int
  md          MeseretawiDirijet @relation(fields: [mdId], references: [id], onDelete: Cascade)

  ReportSent  Report[]
  Notifications Notification[] // Relation to notifications
  Schedules    Schedule[]       // Relation to Schedule

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Report {
  id                  Int                 @id @default(autoincrement())
  name                String?
  description         String?
  reportedBy          String
  reportedByHiwasId   Int?
  reportByHiwas       Hiwas?             @relation(fields: [reportedByHiwasId], references: [id], onDelete: Cascade)

  reportedByMDId      Int?
  reportedByMD        MeseretawiDirijet? @relation(fields: [reportedByMDId], references: [id], onDelete: Cascade)

  reportedByWeredaId  Int?
  reportedByWereda    Wereda?            @relation(fields: [reportedByWeredaId], references: [id], onDelete: Cascade)

  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
}

model Notification {
  id          Int       @id @default(autoincrement())
  message     String
  recipientId Int?       // The user ID receiving the notification
  recipientType String  // 'Wana', 'MeseretawiDirijet', 'Hiwas', or 'Wereda'
  isRead      Boolean   @default(false) // Mark whether the notification is read

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relations
  hiwasId             Int? // Optional relation to Hiwas
  hiwas               Hiwas? @relation(fields: [hiwasId], references: [id], onDelete: Cascade)

  meseretawiDirijetId Int? // Optional relation to MeseretawiDirijet
  meseretawiDirijet   MeseretawiDirijet? @relation(fields: [meseretawiDirijetId], references: [id], onDelete: Cascade)

  weredaId            Int? // Optional relation to Wereda
  wereda              Wereda? @relation(fields: [weredaId], references: [id], onDelete: Cascade)
}

model Schedule {
  id             Int                 @id @default(autoincrement())
  title          String              // Title of the schedule
  description    String?             // Optional description
  startTime      DateTime            // Schedule start time
  endTime        DateTime            // Schedule end time
  createdByRole  String              // Role of the creator: 'Hiwas', 'MeseretawiDirijet', 'Wereda'
  createdById    Int                 // Creator's ID

  // Relations
  createdByHiwasId   Int?            // Relation to Hiwas
  createdByHiwas     Hiwas?          @relation(fields: [createdByHiwasId], references: [id], onDelete: Cascade)

  createdByMDId      Int?            // Relation to Meseretawi Dirijet
  createdByMD        MeseretawiDirijet? @relation(fields: [createdByMDId], references: [id], onDelete: Cascade)

  createdByWeredaId  Int?            // Relation to Wereda
  createdByWereda    Wereda?         @relation(fields: [createdByWeredaId], references: [id], onDelete: Cascade)

  createdAt       DateTime           @default(now())
  updatedAt       DateTime           @updatedAt
}
